using UnityEngine;

public class NarutoStorm4Game :pygame
{
    public GameObject player;
    public GameObject enemy;

    private float playerHealth = 100f;
    private float enemyHealth = 100f;

    void Update()
    {
        if (Input.GetButtonDown("Fire1"))
        {
            Attack(player, enemy);
        }

        if (Input.GetButtonDown("Fire2"))
        {
            Attack(enemy, player);
        }

        if (Input.GetButtonDown("Jump"))
        {
            Jump(player);
        }

        if (Input.GetButtonDown("Special"))
        {
            SpecialAttack(player, enemy);
        }
    }

    void Attack(GameObject attacker, GameObject target)
    {
        float damage = Random.Range(10f, 20f);
        target.GetComponent<NinjaController>().TakeDamage(damage);
        Debug.Log(attacker.name + " attacked " + target.name + " and dealt " + damage + " damage.");

        if (target.GetComponent<NinjaController>().IsDefeated())
        {
            Debug.Log(target.name + " has been defeated!");
        }
    }

    void Jump(GameObject player)
    {
        // Ajoutez ici la logique pour faire sauter le personnage joueur
        Debug.Log(player.name + " jumped!");
    }

    void SpecialAttack(GameObject player, GameObject enemy)
    {
        // Ajoutez ici la logique pour effectuer une attaque sp√©ciale
        float damage = Random.Range(30f, 40f);
        enemy.GetComponent<NinjaController>().TakeDamage(damage);
        Debug.Log(player.name + " performed a special attack on " + enemy.name + " and dealt " + damage + " damage.");

        if (enemy.GetComponent<NinjaController>().IsDefeated())
        {
            Debug.Log(enemy.name + " has been defeated!");
        }
    }
}

public class NinjaController : MonoBehaviour
{
    private float health = 100f;

    public void TakeDamage(float damage)
    {
        health -= damage;
        if (health < 0f)
        {
            health = 0f;
        }
    }

    public bool IsDefeated()
    {
        return health == 0f;
    }
}
